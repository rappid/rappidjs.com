{
    "methods": [
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "query"
                }
            ],
            "name": "_commitQuery",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "e"
                }
            ],
            "name": "_handleColumnClick",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "name": "_initializationComplete",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "children"
                }
            ],
            "definedBy": "js.ui.View",
            "name": "_initializeLayoutChildren",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "attribute"
                }
            ],
            "definedBy": "js.ui.View",
            "name": "_isDOMNodeAttribute",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "key"
                }
            ],
            "definedBy": "js.html.HtmlElement",
            "name": "_isStyleAttribute",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "description": "",
            "private": "",
            "definedBy": "js.html.HtmlElement",
            "name": "_onDomAdded",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "e"
                }
            ],
            "name": "_onRowClick",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "e"
                }
            ],
            "name": "_onRowDblClick",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "key"
                },
                {
                    "name": "value"
                }
            ],
            "definedBy": "js.html.HtmlElement",
            "name": "_renderAttributeInternal",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "child"
                }
            ],
            "definedBy": "js.ui.View",
            "name": "_renderChild",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "enabled"
                }
            ],
            "definedBy": "js.html.HtmlElement",
            "name": "_renderEnabled",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "height",
                    "optional": false,
                    "description": "the width in pixel if not a string"
                }
            ],
            "description": "renders the height of the element if the update-policy allows out-going",
            "private": "",
            "definedBy": "js.html.HtmlElement",
            "name": "_renderHeight",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "policy",
                    "optional": false
                }
            ],
            "description": "",
            "private": "",
            "definedBy": "js.html.HtmlElement",
            "name": "_renderHeightUpdatePolicy",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "id"
                }
            ],
            "definedBy": "js.ui.View",
            "name": "_renderId",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "layoutClass"
                },
                {
                    "name": "oldLayoutClass"
                }
            ],
            "definedBy": "js.ui.View",
            "name": "_renderLayoutClass",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "name",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "value",
                    "optional": false
                }
            ],
            "description": "",
            "private": "",
            "definedBy": "js.html.HtmlElement",
            "name": "_renderPolicyValue",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "selectable",
                    "optional": false
                }
            ],
            "description": "",
            "private": "",
            "definedBy": "js.html.HtmlElement",
            "name": "_renderSelectable",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "templateName"
                },
                {
                    "name": "placeholderName"
                },
                {
                    "name": "attributes"
                }
            ],
            "definedBy": "js.ui.View",
            "name": "_renderTemplateToPlaceHolder",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "width",
                    "optional": false,
                    "description": "the width in pixel if not a string"
                }
            ],
            "description": "renders the width of the element if the update-policy allows out-going",
            "private": "",
            "definedBy": "js.html.HtmlElement",
            "name": "_renderWidth",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "policy",
                    "optional": false
                }
            ],
            "description": "",
            "private": "",
            "definedBy": "js.html.HtmlElement",
            "name": "_renderWidthUpdatePolicy",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "key",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "value",
                    "optional": false
                }
            ],
            "description": "",
            "private": "",
            "definedBy": "js.html.HtmlElement",
            "name": "_setAttribute",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "child"
                }
            ],
            "name": "addChild",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "name": "ctor",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "name": "focus",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "child"
                }
            ],
            "name": "removeChild",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "definedBy": "js.ui.View",
            "name": "render",
            "visibility": "public"
        }
    ],
    "defaults": {
        "$columns": {
            "name": "$columns",
            "defaultType": "factory",
            "visibility": "private"
        },
        "rowHeight": {
            "name": "rowHeight",
            "defaultType": "value",
            "visibility": "public",
            "value": 45
        },
        "width": {
            "name": "width",
            "defaultType": "value",
            "visibility": "public",
            "value": null
        },
        "prefetchItemCount": {
            "name": "prefetchItemCount",
            "defaultType": "value",
            "visibility": "public",
            "value": 0
        },
        "selectedItems": {
            "name": "selectedItems",
            "defaultType": "factory",
            "visibility": "public"
        },
        "selectionMode": {
            "name": "selectionMode",
            "defaultType": "value",
            "visibility": "public",
            "value": "multi"
        },
        "tagName": {
            "name": "tagName",
            "defaultType": "value",
            "visibility": "public",
            "value": "div",
            "definedBy": "js.ui.View"
        },
        "selected": {
            "name": "selected",
            "defaultType": "factory",
            "visibility": "public",
            "description": "If not null, false or undefined the \"active\" CSS class is added",
            "types": [
                "Boolean"
            ],
            "definedBy": "js.html.HtmlElement"
        },
        "selectable": {
            "name": "selectable",
            "defaultType": "factory",
            "visibility": "public",
            "description": "If not null, false or undefined a click will set the element to selected",
            "types": [
                "Boolean"
            ],
            "definedBy": "js.html.HtmlElement"
        },
        "namespace": {
            "name": "namespace",
            "defaultType": "factory",
            "visibility": "public",
            "definedBy": "js.html.HtmlElement"
        },
        "enabled": {
            "name": "enabled",
            "defaultType": "value",
            "visibility": "public",
            "value": true,
            "types": [
                "Boolean"
            ],
            "definedBy": "js.html.HtmlElement"
        },
        "position": {
            "name": "position",
            "defaultType": "value",
            "visibility": "public",
            "value": null,
            "description": "Possible values: \"absolute\", \"relative\"",
            "types": [
                "String"
            ],
            "definedBy": "js.html.HtmlElement"
        },
        "heightUpdatePolicy": {
            "name": "heightUpdatePolicy",
            "defaultType": "value",
            "visibility": "public",
            "value": "out",
            "description": "The heightUpdatePolicy configures whether the height of the component isupdated when the DOM node height changes or if the DOM node height is updatedwhen the component height changes.Possible values:- in - \"height\" attribute is determined by DOM nodes offsetHeight- out - DOM node height is determined by the \"height\" attribute- both - both directions",
            "types": [
                "String"
            ],
            "definedBy": "js.html.HtmlElement"
        },
        "widthUpdatePolicy": {
            "name": "widthUpdatePolicy",
            "defaultType": "value",
            "visibility": "public",
            "value": "out",
            "description": "The widthUpdatePolicy configures whether the width of the component isupdated when the DOM node width changes or if the DOM node width is updatedwhen the component width changes.Possible values:- in - \"width\" attribute is determined by DOM nodes offsetWidth- out - DOM node width is determined by the \"width\" attribute- both - both directions",
            "types": [
                "String"
            ],
            "definedBy": "js.html.HtmlElement"
        }
    },
    "properties": {
        "events": {
            "name": "events",
            "visibility": "public",
            "propertyType": "complex",
            "value": " [\"on:rowClick\", \"on:rowDblClick\"]"
        },
        "$domAttributes": {
            "name": "$domAttributes",
            "visibility": "private",
            "propertyType": "complex",
            "value": " ['class', 'id', 'style', 'tabindex']",
            "definedBy": "js.ui.View"
        },
        "$classAttributes": {
            "name": "$classAttributes",
            "visibility": "private",
            "propertyType": "complex",
            "value": " ['heightUpdatePolicy', 'widthUpdatePolicy', 'content']",
            "definedBy": "js.html.HtmlElement"
        },
        "$excludedStyleAttributes": {
            "name": "$excludedStyleAttributes",
            "visibility": "private",
            "propertyType": "complex",
            "value": " ['src','content']",
            "definedBy": "js.html.HtmlElement"
        },
        "$renderAsStyleWithPx": {
            "name": "$renderAsStyleWithPx",
            "visibility": "private",
            "propertyType": "complex",
            "value": " ['left', 'top']",
            "definedBy": "js.html.HtmlElement"
        }
    },
    "fqClassName": "js.ui.DataGridClass",
    "inherit": "js.ui.View",
    "dependencies": [
        "js.core.List",
        "js.data.Query",
        "js.ui.DataGridItemsViewClass",
        "js.ui.View",
        "underscore",
        "xaml!js.ui.DataGridColumn"
    ],
    "type": "js",
    "inheritancePath": [
        "js.ui.View",
        "js.html.HtmlElement",
        "js.core.DomElement"
    ]
}