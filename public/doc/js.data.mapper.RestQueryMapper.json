{
    "methods": [
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Function"
                    ],
                    "name": "fnc",
                    "optional": false
                },
                {
                    "types": [
                        "String"
                    ],
                    "name": "cacheId",
                    "optional": true
                },
                {
                    "types": [
                        "Number"
                    ],
                    "name": "delay",
                    "optional": true
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "scope",
                    "optional": true
                },
                {
                    "types": [
                        "Array"
                    ],
                    "name": "parameters",
                    "optional": true
                },
                {
                    "types": [
                        "String"
                    ],
                    "name": "strategy",
                    "optional": true,
                    "defaultValue": "loop",
                    "description": "loop will trigger the function at least every delay, wait will clear the timeout"
                }
            ],
            "annotations": {},
            "description": "",
            "private": "",
            "definedBy": "js.core.Base",
            "name": "_debounceFunctionCall",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "query"
                }
            ],
            "annotations": {},
            "definedBy": "js.data.QueryMapper",
            "overwritesMethod": true,
            "name": "compose",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedBy": "js.core.Base",
            "name": "ctor",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedBy": "js.core.Base",
            "name": "emptyCallback",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String",
                        "Array"
                    ],
                    "name": "message",
                    "optional": false,
                    "description": "the message to log"
                },
                {
                    "types": [
                        "String"
                    ],
                    "name": "level",
                    "optional": true,
                    "defaultValue": "\"info\"",
                    "description": "the service level of (debug, info, warn, error)"
                }
            ],
            "annotations": {},
            "description": "logs messages to configured logging functions\n",
            "definedBy": "js.core.Base",
            "name": "log",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "queryString"
                }
            ],
            "annotations": {},
            "definedBy": "js.data.QueryMapper",
            "name": "parse",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "description": "determinate if the application runs in the browser or on node\n",
            "returns": {
                "types": [
                    "Boolean"
                ],
                "description": "true if the application runs in a browser"
            },
            "definedBy": "js.core.Base",
            "name": "runsInBrowser",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "expressions"
                },
                {
                    "name": "depth"
                }
            ],
            "annotations": {},
            "name": "translateExpressions",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "operator"
                },
                {
                    "name": "depth"
                }
            ],
            "annotations": {},
            "name": "translateOperator",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "sort"
                }
            ],
            "annotations": {},
            "name": "translateSort",
            "visibility": "public"
        }
    ],
    "defaults": {},
    "properties": {},
    "fqClassName": "js.data.mapper.RestQueryMapper",
    "inherit": "js.data.QueryMapper",
    "dependencies": [
        "js.data.QueryMapper",
        "underscore"
    ],
    "type": "js",
    "file": "js/data/mapper/RestQueryMapper.js",
    "package": "js.data.mapper",
    "inheritancePath": [
        "js.data.QueryMapper",
        "js.core.Base"
    ]
}