{
    "fqClassName": "js.core.ModuleLoader",
    "methods": {
        "ctor": {
            "type": "Method",
            "parameter": [
                {
                    "name": "attributes"
                }
            ]
        },
        "_initializationComplete": {
            "type": "Method",
            "parameter": []
        },
        "addModule": {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.conf.Module"
                    ],
                    "name": "module",
                    "optional": false
                }
            ],
            "description": "adds a module to the list of known modules"
        },
        "_startModule": {
            "type": "Method",
            "parameter": [
                {
                    "name": "moduleName"
                },
                {
                    "name": "moduleInstance"
                },
                {
                    "name": "callback"
                },
                {
                    "name": "routeContext"
                },
                {
                    "name": "cachedInstance"
                }
            ]
        },
        "loadModule": {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.conf.Module"
                    ],
                    "name": "module",
                    "optional": false,
                    "description": "the module to load"
                },
                {
                    "types": [
                        "Function"
                    ],
                    "name": "callback",
                    "optional": true,
                    "description": "a callback function which gets invoked after the module is loaded or an error occurred"
                },
                {
                    "types": [
                        "js.core.Router.RouteContext"
                    ],
                    "name": "routeContext",
                    "optional": true
                }
            ],
            "description": "loads an module instance into the module loader and starts the module"
        },
        "moduleNames": {
            "type": "Method",
            "parameter": [],
            "returns": {
                "types": [
                    "Array"
                ]
            }
        },
        "render": {
            "type": "Method",
            "parameter": []
        },
        "_renderVisible": {
            "type": "Method",
            "parameter": [
                {
                    "name": "visible"
                }
            ],
            "definedBy": "js.html.HtmlElement"
        },
        "_renderHidden": {
            "type": "Method",
            "parameter": [
                {
                    "name": "hidden"
                }
            ],
            "definedBy": "js.html.HtmlElement"
        },
        "_renderSelected": {
            "type": "Method",
            "parameter": [
                {
                    "name": "selected"
                }
            ],
            "definedBy": "js.html.HtmlElement"
        },
        "_renderSelectable": {
            "type": "Method",
            "parameter": [
                {
                    "name": "selectable"
                }
            ],
            "definedBy": "js.html.HtmlElement"
        },
        "_renderWidth": {
            "type": "Method",
            "parameter": [
                {
                    "name": "width"
                }
            ],
            "definedBy": "js.html.HtmlElement"
        },
        "_renderHeight": {
            "type": "Method",
            "parameter": [
                {
                    "name": "height"
                }
            ],
            "definedBy": "js.html.HtmlElement"
        }
    },
    "inherit": "js.core.UIComponent",
    "inheritancePath": [
        "js.core.UIComponent",
        "js.html.HtmlElement",
        "js.core.DomElement"
    ]
}