{
    "methods": [
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "itemA"
                },
                {
                    "name": "itemB"
                }
            ],
            "definedBy": "js.ui.SelectionView",
            "name": "_areItemsEqual",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "name": "_bindDomEvents",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Object"
                    ],
                    "name": "item",
                    "optional": false
                },
                {
                    "types": [
                        "js.core.Component"
                    ],
                    "name": "component",
                    "optional": false
                }
            ],
            "description": "Caches the component to a given item",
            "returns": {
                "types": [
                    "js.core.Component"
                ],
                "description": "returns the component"
            },
            "private": "",
            "definedBy": "js.ui.ItemsView",
            "name": "_cacheComponentForItem",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "name": "_checkOptions",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Object"
                    ],
                    "name": "item",
                    "optional": false
                },
                {
                    "types": [
                        "Number"
                    ],
                    "name": "index",
                    "optional": false
                }
            ],
            "description": "Creates a component based on the template for a given item",
            "returns": {
                "types": [
                    "js.core.Component"
                ],
                "description": "component"
            },
            "private": "",
            "definedBy": "js.ui.ItemsView",
            "name": "_createComponentForItem",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "description": "Returns the key to access the index in the template",
            "returns": {
                "types": [
                    "String"
                ]
            },
            "private": "",
            "definedBy": "js.ui.ItemsView",
            "name": "_getIndexKey",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "description": "Returns the key to access the item in the template",
            "returns": {
                "types": [
                    "String"
                ]
            },
            "private": "",
            "definedBy": "js.ui.ItemsView",
            "name": "_getItemKey",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "items"
                }
            ],
            "definedBy": "js.ui.ItemsView",
            "name": "_getItemsArray",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "item",
                    "optional": false
                }
            ],
            "description": "Calculates a cache key for a given item.If a keyPath is set, it will return the value of the pathOtherwise if the item is a {js.core.Bindable} it will return the $cidIf no keyPath is set and it's an object it will return null;",
            "returns": {
                "types": [
                    "*"
                ]
            },
            "private": "",
            "definedBy": "js.ui.ItemsView",
            "name": "_getKeyForItem",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "children"
                }
            ],
            "definedBy": "js.ui.View",
            "name": "_initializeLayoutChildren",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Object"
                    ],
                    "name": "item",
                    "optional": false
                },
                {
                    "types": [
                        "Number"
                    ],
                    "name": "index",
                    "optional": false
                }
            ],
            "description": "Inner render method for an itemCreates a component, caches the component and adds the component to the list of children",
            "private": "",
            "definedBy": "js.ui.ItemsView",
            "name": "_innerRenderItem",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Array"
                    ],
                    "name": "items",
                    "optional": false,
                    "description": "[]"
                }
            ],
            "description": "Inner render method for a list of itemsAll rendered items will be removed and destroyed before rendering",
            "private": "",
            "definedBy": "js.ui.ItemsView",
            "name": "_innerRenderItems",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "attribute"
                }
            ],
            "definedBy": "js.ui.View",
            "name": "_isDOMNodeAttribute",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "key"
                }
            ],
            "definedBy": "js.html.HtmlElement",
            "name": "_isStyleAttribute",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "child"
                }
            ],
            "definedBy": "js.ui.SelectionView",
            "name": "_onChildSelected",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "description": "",
            "private": "",
            "definedBy": "js.html.HtmlElement",
            "name": "_onDomAdded",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "e"
                }
            ],
            "definedBy": "js.ui.ItemsView",
            "name": "_onItemAdd",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "e"
                }
            ],
            "definedBy": "js.ui.ItemsView",
            "name": "_onItemRemove",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "e"
                }
            ],
            "definedBy": "js.ui.ItemsView",
            "name": "_onReset",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "e"
                }
            ],
            "definedBy": "js.ui.SelectionView",
            "name": "_onSelectedItemAdd",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "e"
                }
            ],
            "definedBy": "js.ui.SelectionView",
            "name": "_onSelectedItemRemove",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "definedBy": "js.ui.SelectionView",
            "name": "_onSelectedItemReset",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "event"
                }
            ],
            "description": "This method is called when the sort event is fired,It reorders the items in the list",
            "private": "",
            "definedBy": "js.ui.ItemsView",
            "name": "_onSort",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Object"
                    ],
                    "name": "item",
                    "optional": false
                }
            ],
            "description": "Removes an item from the list",
            "private": "",
            "definedBy": "js.ui.ItemsView",
            "name": "_removeRenderedItem",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "key"
                },
                {
                    "name": "value"
                }
            ],
            "definedBy": "js.html.HtmlElement",
            "name": "_renderAttributeInternal",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "child"
                }
            ],
            "definedBy": "js.ui.View",
            "name": "_renderChild",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "enabled"
                }
            ],
            "definedBy": "js.html.HtmlElement",
            "name": "_renderEnabled",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "height",
                    "optional": false,
                    "description": "the width in pixel if not a string"
                }
            ],
            "description": "renders the height of the element if the update-policy allows out-going",
            "private": "",
            "definedBy": "js.html.HtmlElement",
            "name": "_renderHeight",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "policy",
                    "optional": false
                }
            ],
            "description": "",
            "private": "",
            "definedBy": "js.html.HtmlElement",
            "name": "_renderHeightUpdatePolicy",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "id"
                }
            ],
            "definedBy": "js.ui.View",
            "name": "_renderId",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "items",
                    "optional": false
                }
            ],
            "description": "Renders the given items",
            "private": "",
            "definedBy": "js.ui.ItemsView",
            "name": "_renderItems",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "layoutClass"
                },
                {
                    "name": "oldLayoutClass"
                }
            ],
            "definedBy": "js.ui.View",
            "name": "_renderLayoutClass",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "multiSelect"
                }
            ],
            "name": "_renderMultiSelect",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "name",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "value",
                    "optional": false
                }
            ],
            "description": "",
            "private": "",
            "definedBy": "js.html.HtmlElement",
            "name": "_renderPolicyValue",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "selectable",
                    "optional": false
                }
            ],
            "description": "",
            "private": "",
            "definedBy": "js.html.HtmlElement",
            "name": "_renderSelectable",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "i"
                }
            ],
            "definedBy": "js.ui.SelectionView",
            "name": "_renderSelectedIndex",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "item"
                },
                {
                    "name": "oldItem"
                }
            ],
            "definedBy": "js.ui.SelectionView",
            "name": "_renderSelectedItem",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "list"
                }
            ],
            "definedBy": "js.ui.SelectionView",
            "name": "_renderSelectedItems",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "templateName"
                },
                {
                    "name": "placeholderName"
                },
                {
                    "name": "attributes"
                }
            ],
            "definedBy": "js.ui.View",
            "name": "_renderTemplateToPlaceHolder",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "width",
                    "optional": false,
                    "description": "the width in pixel if not a string"
                }
            ],
            "description": "renders the width of the element if the update-policy allows out-going",
            "private": "",
            "definedBy": "js.html.HtmlElement",
            "name": "_renderWidth",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "policy",
                    "optional": false
                }
            ],
            "description": "",
            "private": "",
            "definedBy": "js.html.HtmlElement",
            "name": "_renderWidthUpdatePolicy",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "key",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "value",
                    "optional": false
                }
            ],
            "description": "",
            "private": "",
            "definedBy": "js.html.HtmlElement",
            "name": "_setAttribute",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "definedBy": "js.ui.ItemsView",
            "name": "ctor",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "item",
                    "optional": false
                }
            ],
            "description": "Returns the rendered component to a given item",
            "returns": {
                "types": [
                    "js/core/Component"
                ],
                "description": "component"
            },
            "definedBy": "js.ui.ItemsView",
            "name": "getComponentForItem",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "definedBy": "js.ui.SelectionView",
            "name": "hasSelectedItems",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "definedBy": "js.ui.View",
            "name": "render",
            "visibility": "public"
        }
    ],
    "defaults": {
        "multiSelect": {
            "name": "multiSelect",
            "defaultType": "value",
            "visibility": "public",
            "value": false,
            "definedBy": "js.ui.SelectionView",
            "overwrites": true
        },
        "forceSelectable": {
            "name": "forceSelectable",
            "defaultType": "value",
            "visibility": "public",
            "value": false,
            "definedBy": "js.ui.SelectionView",
            "overwrites": true
        },
        "needsSelection": {
            "name": "needsSelection",
            "defaultType": "value",
            "visibility": "public",
            "value": true,
            "definedBy": "js.ui.SelectionView",
            "overwrites": true
        },
        "tagName": {
            "name": "tagName",
            "defaultType": "value",
            "visibility": "public",
            "value": "select",
            "definedBy": "js.ui.View",
            "overwrites": true
        },
        "selectedViews": {
            "name": "selectedViews",
            "defaultType": "factory",
            "visibility": "public",
            "definedBy": "js.ui.SelectionView"
        },
        "selectedItems": {
            "name": "selectedItems",
            "defaultType": "factory",
            "visibility": "public",
            "definedBy": "js.ui.SelectionView"
        },
        "selectedItem": {
            "name": "selectedItem",
            "defaultType": "value",
            "visibility": "public",
            "value": null,
            "definedBy": "js.ui.SelectionView"
        },
        "items": {
            "name": "items",
            "defaultType": "value",
            "visibility": "public",
            "value": null,
            "definedBy": "js.ui.ItemsView"
        },
        "allowDeselection": {
            "name": "allowDeselection",
            "defaultType": "value",
            "visibility": "public",
            "value": false,
            "definedBy": "js.ui.SelectionView"
        },
        "itemKey": {
            "name": "itemKey",
            "defaultType": "value",
            "visibility": "public",
            "value": "item",
            "definedBy": "js.ui.ItemsView"
        },
        "indexKey": {
            "name": "indexKey",
            "defaultType": "value",
            "visibility": "public",
            "value": "index",
            "definedBy": "js.ui.ItemsView"
        },
        "keyPath": {
            "name": "keyPath",
            "defaultType": "value",
            "visibility": "public",
            "value": null,
            "definedBy": "js.ui.ItemsView"
        },
        "selected": {
            "name": "selected",
            "defaultType": "factory",
            "visibility": "public",
            "description": "If not null, false or undefined the \"active\" CSS class is added",
            "types": [
                "Boolean"
            ],
            "definedBy": "js.html.HtmlElement"
        },
        "selectable": {
            "name": "selectable",
            "defaultType": "factory",
            "visibility": "public",
            "description": "If not null, false or undefined a click will set the element to selected",
            "types": [
                "Boolean"
            ],
            "definedBy": "js.html.HtmlElement"
        },
        "namespace": {
            "name": "namespace",
            "defaultType": "factory",
            "visibility": "public",
            "definedBy": "js.html.HtmlElement"
        },
        "enabled": {
            "name": "enabled",
            "defaultType": "value",
            "visibility": "public",
            "value": true,
            "types": [
                "Boolean"
            ],
            "definedBy": "js.html.HtmlElement"
        },
        "position": {
            "name": "position",
            "defaultType": "value",
            "visibility": "public",
            "value": null,
            "description": "Possible values: \"absolute\", \"relative\"",
            "types": [
                "String"
            ],
            "definedBy": "js.html.HtmlElement"
        },
        "heightUpdatePolicy": {
            "name": "heightUpdatePolicy",
            "defaultType": "value",
            "visibility": "public",
            "value": "out",
            "description": "The heightUpdatePolicy configures whether the height of the component isupdated when the DOM node height changes or if the DOM node height is updatedwhen the component height changes.Possible values:- in - \"height\" attribute is determined by DOM nodes offsetHeight- out - DOM node height is determined by the \"height\" attribute- both - both directions",
            "types": [
                "String"
            ],
            "definedBy": "js.html.HtmlElement"
        },
        "widthUpdatePolicy": {
            "name": "widthUpdatePolicy",
            "defaultType": "value",
            "visibility": "public",
            "value": "out",
            "description": "The widthUpdatePolicy configures whether the width of the component isupdated when the DOM node width changes or if the DOM node width is updatedwhen the component width changes.Possible values:- in - \"width\" attribute is determined by DOM nodes offsetWidth- out - DOM node width is determined by the \"width\" attribute- both - both directions",
            "types": [
                "String"
            ],
            "definedBy": "js.html.HtmlElement"
        }
    },
    "properties": {
        "$defaultTemplateName": {
            "name": "$defaultTemplateName",
            "visibility": "private",
            "propertyType": "value",
            "definedBy": "js.ui.ItemsView",
            "overwrites": true
        },
        "hasSelection": {
            "name": "hasSelection",
            "visibility": "public",
            "propertyType": "complex",
            "value": " function () {\n                if (!this.$.selectedItem) {\n                    return false;\n                }\n                var c,\n                    itemKey = this._getItemKey();\n                for (var i = 0; i < this.$renderedChildren.length; i++) {\n                    c = this.$renderedChildren[i].get(itemKey);\n                    if (this._areItemsEqual(c, this.$.selectedItem)) {\n                        return true;\n                    }\n                }\n                return false;\n            }.onChange('selectedItem')",
            "definedBy": "js.ui.SelectionView"
        },
        "isEmpty": {
            "name": "isEmpty",
            "visibility": "public",
            "propertyType": "complex",
            "value": " function () {\n                if (this.$.items) {\n                    return this.$.items.length;\n                }\n                return 0;\n            }.onChange('items')",
            "description": "Returns true if items are available",
            "definedBy": "js.ui.ItemsView"
        },
        "$domAttributes": {
            "name": "$domAttributes",
            "visibility": "private",
            "propertyType": "complex",
            "value": " ['class', 'id', 'style', 'tabindex']",
            "definedBy": "js.ui.View"
        },
        "$classAttributes": {
            "name": "$classAttributes",
            "visibility": "private",
            "propertyType": "complex",
            "value": " ['heightUpdatePolicy', 'widthUpdatePolicy', 'content']",
            "definedBy": "js.html.HtmlElement"
        },
        "$excludedStyleAttributes": {
            "name": "$excludedStyleAttributes",
            "visibility": "private",
            "propertyType": "complex",
            "value": " ['src','content']",
            "definedBy": "js.html.HtmlElement"
        },
        "$renderAsStyleWithPx": {
            "name": "$renderAsStyleWithPx",
            "visibility": "private",
            "propertyType": "complex",
            "value": " ['left', 'top']",
            "definedBy": "js.html.HtmlElement"
        }
    },
    "fqClassName": "js.html.Select",
    "inherit": "js.ui.SelectionView",
    "dependencies": [
        "js.ui.SelectionView",
        "underscore"
    ],
    "type": "js",
    "inheritancePath": [
        "js.ui.SelectionView",
        "js.ui.ItemsView",
        "js.ui.View",
        "js.html.HtmlElement",
        "js.core.DomElement"
    ]
}