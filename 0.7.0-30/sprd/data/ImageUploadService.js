define(["js/core/Component","xaml!sprd/data/ImageServerDataSource","flow","sprd/model/UploadImage","sprd/type/UploadDesign","underscore","sprd/entity/FileSystemImage","sprd/entity/RemoteImage","sprd/entity/Image"],function(e,t,n,r,i,s,o,u,a){return e.inherit("sprd.data.ImageUploadService",{defaults:{uploadContext:null},inject:{imageServer:t},upload:function(e,t){var n;e instanceof a?n=e:s.isString(e)?n=new u({src:e}):n=new o({file:e}),this._uploadDesign(new i({image:n}),t)},_uploadDesign:function(e,t){t=t||this.emptyCallback();var s=this.$.uploadContext,o=this.$.imageServer,u;s||(u="No upload context set. Cancel upload"),o||(u="No imageServer available");if(u){e.set("state",i.State.ERROR),this.log(u,"warn"),t(u);return}e.set("state",i.State.LOADING),n().seq(function(e){s.fetch(null,e)}).seq("design",function(){var t=s.getCollection("designs").createItem();return t.set("name",e.get("image.name")),t}).seq(function(e){this.vars.design.save(null,e)}).seq(function(t){var n=this.vars.design,i=o.createEntity(r,n.$.id);i.set("image",e.$.image),e.set({design:n,id:n.$.id}),i.save({xhrBeforeSend:function(t){t&&t.upload&&(t.upload.onprogress=function(t){e.set("uploadProgress",100/t.total*t.loaded)}),t.onload=function(){e.set("uploadProgress",100)}}},t)}).exec(function(n){e.set("state",n?i.State.ERROR:i.State.LOADED),t&&t(n,e)})}})});